<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.luckycloud.mapper.user.CloudUserRoleRelationMapper">

    <resultMap id="BaseResultMap" type="org.luckycloud.domain.user.CloudUserRoleRelationDO">
            <id property="id" column="ID" jdbcType="VARCHAR"/>
            <result property="roleId" column="ROLE_ID" jdbcType="VARCHAR"/>
            <result property="userId" column="USER_ID" jdbcType="VARCHAR"/>
            <result property="createTime" column="CREATE_TIME" jdbcType="TIMESTAMP"/>
            <result property="updateTime" column="UPDATE_TIME" jdbcType="TIMESTAMP"/>
            <result property="status" column="STATUS" jdbcType="CHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID,ROLE_ID,USER_ID,
        CREATE_TIME,UPDATE_TIME,STATUS
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from cloud_user_role_relation
        where  ID = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from cloud_user_role_relation
        where  ID = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="org.luckycloud.domain.user.CloudUserRoleRelationDO" useGeneratedKeys="true">
        insert into cloud_user_role_relation
        ( ID,ROLE_ID,USER_ID
        ,CREATE_TIME,UPDATE_TIME,STATUS
        )
        values (#{id,jdbcType=VARCHAR},#{roleId,jdbcType=VARCHAR},#{userId,jdbcType=VARCHAR}
        ,#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{status,jdbcType=CHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="ID" keyProperty="id" parameterType="org.luckycloud.domain.user.CloudUserRoleRelationDO" useGeneratedKeys="true">
        insert into cloud_user_role_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">ID,</if>
                <if test="roleId != null">ROLE_ID,</if>
                <if test="userId != null">USER_ID,</if>
                <if test="createTime != null">CREATE_TIME,</if>
                <if test="updateTime != null">UPDATE_TIME,</if>
                <if test="status != null">STATUS,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">ID = #{id,jdbcType=VARCHAR},</if>
                <if test="roleId != null">ROLE_ID = #{roleId,jdbcType=VARCHAR},</if>
                <if test="userId != null">USER_ID = #{userId,jdbcType=VARCHAR},</if>
                <if test="createTime != null">CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},</if>
                <if test="updateTime != null">UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},</if>
                <if test="status != null">STATUS = #{status,jdbcType=CHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.luckycloud.domain.user.CloudUserRoleRelationDO">
        update cloud_user_role_relation
        <set>
                <if test="roleId != null">
                    ROLE_ID = #{roleId,jdbcType=VARCHAR},
                </if>
                <if test="userId != null">
                    USER_ID = #{userId,jdbcType=VARCHAR},
                </if>
                <if test="createTime != null">
                    CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
                </if>
                <if test="updateTime != null">
                    UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
                </if>
                <if test="status != null">
                    STATUS = #{status,jdbcType=CHAR},
                </if>
        </set>
        where   ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="org.luckycloud.domain.user.CloudUserRoleRelationDO">
        update cloud_user_role_relation
        set
            ROLE_ID =  #{roleId,jdbcType=VARCHAR},
            USER_ID =  #{userId,jdbcType=VARCHAR},
            CREATE_TIME =  #{createTime,jdbcType=TIMESTAMP},
            UPDATE_TIME =  #{updateTime,jdbcType=TIMESTAMP},
            STATUS =  #{status,jdbcType=CHAR}
        where   ID = #{id,jdbcType=VARCHAR}
    </update>
</mapper>
